Attaching to complexudemy_server_1, complexudemy_redis_1, complexudemy_client_1, complexudemy_nginx_1, complexudemy_postgres_1, complexudemy_worker_1
redis_1     | 1:C 01 Oct 2019 16:10:45.555 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
client_1    | 
redis_1     | 1:C 01 Oct 2019 16:10:45.555 # Redis version=5.0.5, bits=64, commit=00000000, modified=0, pid=1, just started
server_1    | 
client_1    | > client@0.1.0 start /usr/local/app
client_1    | > react-scripts start
server_1    | > @ dev /usr/local/app
redis_1     | 1:C 01 Oct 2019 16:10:45.555 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf
client_1    | 
server_1    | > nodemon
server_1    | 
client_1    | Starting the development server...
client_1    | 
server_1    | [33m[nodemon] 1.18.3[39m
server_1    | [33m[nodemon] to restart at any time, enter `rs`[39m
server_1    | [33m[nodemon] watching: *.*[39m
server_1    | [32m[nodemon] starting `node index.js`[39m
redis_1     | 1:M 01 Oct 2019 16:10:45.690 * Running mode=standalone, port=6379.
server_1    | Listening
client_1    | Compiled successfully!
client_1    | 
redis_1     | 1:M 01 Oct 2019 16:10:45.690 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
server_1    | Error: connect ECONNREFUSED 192.168.96.5:5432
client_1    | You can now view client in the browser.
redis_1     | 1:M 01 Oct 2019 16:10:45.690 # Server initialized
server_1    |     at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1056:14) {
client_1    | 
client_1    |   Local:            http://localhost:3000/
server_1    |   errno: 'ECONNREFUSED',
postgres_1  | The files belonging to this database system will be owned by user "postgres".
postgres_1  | This user must also own the server process.
client_1    |   On Your Network:  http://192.168.96.7:3000/
redis_1     | 1:M 01 Oct 2019 16:10:45.690 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
server_1    |   code: 'ECONNREFUSED',
postgres_1  | 
redis_1     | 1:M 01 Oct 2019 16:10:45.690 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
client_1    | 
server_1    |   syscall: 'connect',
server_1    |   address: '192.168.96.5',
worker_1    | 
redis_1     | 1:M 01 Oct 2019 16:10:45.690 * Ready to accept connections
client_1    | Note that the development build is not optimized.
server_1    |   port: 5432
postgres_1  | The database cluster will be initialized with locale "en_US.utf8".
worker_1    | > @ dev /usr/local/app
client_1    | To create a production build, use npm run build.
server_1    | }
worker_1    | > nodemon
client_1    | 
worker_1    | 
postgres_1  | The default database encoding has accordingly been set to "UTF8".
postgres_1  | The default text search configuration will be set to "english".
worker_1    | [33m[nodemon] 1.18.3[39m
postgres_1  | 
worker_1    | [33m[nodemon] to restart at any time, enter `rs`[39m
postgres_1  | Data page checksums are disabled.
worker_1    | [33m[nodemon] watching: *.*[39m
postgres_1  | 
worker_1    | [32m[nodemon] starting `node index.js`[39m
postgres_1  | fixing permissions on existing directory /var/lib/postgresql/data ... ok
postgres_1  | creating subdirectories ... ok
postgres_1  | selecting default max_connections ... 100
postgres_1  | selecting default shared_buffers ... 128MB
postgres_1  | selecting default timezone ... Etc/UTC
postgres_1  | selecting dynamic shared memory implementation ... posix
postgres_1  | creating configuration files ... ok
postgres_1  | running bootstrap script ... ok
postgres_1  | performing post-bootstrap initialization ... ok
postgres_1  | syncing data to disk ... ok
postgres_1  | 
postgres_1  | WARNING: enabling "trust" authentication for local connections
postgres_1  | You can change this by editing pg_hba.conf or using the option -A, or
postgres_1  | --auth-local and --auth-host, the next time you run initdb.
postgres_1  | 
postgres_1  | Success. You can now start the database server using:
postgres_1  | 
postgres_1  |     pg_ctl -D /var/lib/postgresql/data -l logfile start
postgres_1  | 
postgres_1  | ****************************************************
postgres_1  | WARNING: No password has been set for the database.
postgres_1  |          This will allow anyone with access to the
postgres_1  |          Postgres port to access your database. In
postgres_1  |          Docker's default configuration, this is
postgres_1  |          effectively any other container on the same
postgres_1  |          system.
postgres_1  | 
postgres_1  |          Use "-e POSTGRES_PASSWORD=password" to set
postgres_1  |          it in "docker run".
postgres_1  | ****************************************************
postgres_1  | waiting for server to start....2019-10-01 16:10:48.505 UTC [42] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
postgres_1  | 2019-10-01 16:10:48.733 UTC [43] LOG:  database system was shut down at 2019-10-01 16:10:46 UTC
postgres_1  | 2019-10-01 16:10:48.865 UTC [42] LOG:  database system is ready to accept connections
postgres_1  |  done
postgres_1  | server started
postgres_1  | 
postgres_1  | /usr/local/bin/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*
postgres_1  | 
postgres_1  | waiting for server to shut down....2019-10-01 16:10:48.917 UTC [42] LOG:  received fast shutdown request
postgres_1  | 2019-10-01 16:10:48.959 UTC [42] LOG:  aborting any active transactions
postgres_1  | 2019-10-01 16:10:48.965 UTC [42] LOG:  background worker "logical replication launcher" (PID 49) exited with exit code 1
postgres_1  | 2019-10-01 16:10:48.965 UTC [44] LOG:  shutting down
postgres_1  | 2019-10-01 16:10:49.531 UTC [42] LOG:  database system is shut down
postgres_1  |  done
postgres_1  | server stopped
postgres_1  | 
postgres_1  | PostgreSQL init process complete; ready for start up.
postgres_1  | 
postgres_1  | 2019-10-01 16:10:49.629 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
postgres_1  | 2019-10-01 16:10:49.629 UTC [1] LOG:  listening on IPv6 address "::", port 5432
postgres_1  | 2019-10-01 16:10:49.730 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
postgres_1  | 2019-10-01 16:10:49.890 UTC [51] LOG:  database system was shut down at 2019-10-01 16:10:49 UTC
postgres_1  | 2019-10-01 16:10:49.925 UTC [1] LOG:  database system is ready to accept connections
